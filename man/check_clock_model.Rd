% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_clock_model.R
\name{check_clock_model}
\alias{check_clock_model}
\title{Check if the clock model is a valid clock model
Calls \code{stop} if the clock models are invalid}
\usage{
check_clock_model(clock_model)
}
\arguments{
\item{clock_model}{a clock model,
as returned by \code{\link{create_clock_model}}}
}
\value{
nothing
}
\description{
Check if the clock model is a valid clock model
Calls \code{stop} if the clock models are invalid
}
\examples{
 testthat::expect_silent(check_clock_model(create_jc69_clock_model()))
 testthat::expect_silent(check_clock_model(create_hky_clock_model()))
 testthat::expect_silent(check_clock_model(create_tn93_clock_model()))
 testthat::expect_silent(check_clock_model(create_gtr_clock_model()))

 # Can use list of one clock model
 testthat::expect_silent(check_clock_model(list(create_jc69_clock_model())))

 # List of two clock models is not a/one clock model
 testthat::expect_error(
  check_clock_model(
    list(create_jc69_clock_model(), create_jc69_clock_model())
  )
 )

 # Must stop on non-clock models
 testthat::expect_error(check_clock_model(clock_model = "nonsense"))
 testthat::expect_error(check_clock_model(clock_model = NULL))
 testthat::expect_error(check_clock_model(clock_model = NA))
}
\seealso{
Use \link{create_clock_model} to create a valid clock model
}
\author{
Richel J.C. Bilderbeek
}
